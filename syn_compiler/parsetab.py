
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON ID LCB LRB LSB RCB RRB RSBprogram : entityentity : enumentity : structentity : arrayentity : atomicentity_list : entity_list entityentity_list : field_list : field_list fieldfield_list : field : atomic COLON entityenum : atomic LRB entity_list RRBenum : LRB entity_list RRBstruct : atomic LCB field_list RCBstruct : LCB field_list RCBarray : atomic LSB entity_list RSBarray : LSB entity_list RSBatomic : ID'
    
_lr_action_items = {'LRB':([0,3,4,5,6,7,9,10,11,13,14,16,17,19,20,21,22,25,26,27,28,29,],[7,-2,-3,-4,11,-7,-7,-17,-7,-7,7,7,7,7,-12,-6,-14,-16,-11,-13,-15,7,]),'LCB':([0,3,4,5,6,7,9,10,11,13,14,16,17,19,20,21,22,25,26,27,28,29,],[8,-2,-3,-4,12,-7,-7,-17,-7,-7,8,8,8,8,-12,-6,-14,-16,-11,-13,-15,8,]),'LSB':([0,3,4,5,6,7,9,10,11,13,14,16,17,19,20,21,22,25,26,27,28,29,],[9,-2,-3,-4,13,-7,-7,-17,-7,-7,9,9,9,9,-12,-6,-14,-16,-11,-13,-15,9,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,],[10,-2,-3,-4,-5,-7,-9,-7,-17,-7,-9,-7,10,10,10,10,10,10,-12,-6,-14,-8,-16,-11,-13,-15,10,-10,]),'$end':([1,2,3,4,5,6,10,20,22,25,26,27,28,],[0,-1,-2,-3,-4,-5,-17,-12,-14,-16,-11,-13,-15,]),'RRB':([3,4,5,6,7,10,11,14,17,20,21,22,25,26,27,28,],[-2,-3,-4,-5,-7,-17,-7,20,26,-12,-6,-14,-16,-11,-13,-15,]),'RSB':([3,4,5,6,9,10,13,16,19,20,21,22,25,26,27,28,],[-2,-3,-4,-5,-7,-17,-7,25,28,-12,-6,-14,-16,-11,-13,-15,]),'RCB':([3,4,5,6,8,10,12,15,18,20,22,23,25,26,27,28,30,],[-2,-3,-4,-5,-9,-17,-9,22,27,-12,-14,-8,-16,-11,-13,-15,-10,]),'COLON':([10,24,],[-17,29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'entity':([0,14,16,17,19,29,],[2,21,21,21,21,30,]),'enum':([0,14,16,17,19,29,],[3,3,3,3,3,3,]),'struct':([0,14,16,17,19,29,],[4,4,4,4,4,4,]),'array':([0,14,16,17,19,29,],[5,5,5,5,5,5,]),'atomic':([0,14,15,16,17,18,19,29,],[6,6,24,6,6,24,6,6,]),'entity_list':([7,9,11,13,],[14,16,17,19,]),'field_list':([8,12,],[15,18,]),'field':([15,18,],[23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> entity','program',1,'p_program','parser.py',15),
  ('entity -> enum','entity',1,'p_entity_enum','parser.py',19),
  ('entity -> struct','entity',1,'p_entity_struct','parser.py',23),
  ('entity -> array','entity',1,'p_entity_array','parser.py',27),
  ('entity -> atomic','entity',1,'p_entity_atomic','parser.py',31),
  ('entity_list -> entity_list entity','entity_list',2,'p_entity_list_entity','parser.py',35),
  ('entity_list -> <empty>','entity_list',0,'p_entity_list_lambda','parser.py',39),
  ('field_list -> field_list field','field_list',2,'p_field_list_field','parser.py',43),
  ('field_list -> <empty>','field_list',0,'p_field_list_lambda','parser.py',47),
  ('field -> atomic COLON entity','field',3,'p_field','parser.py',51),
  ('enum -> atomic LRB entity_list RRB','enum',4,'p_enum_atomic','parser.py',55),
  ('enum -> LRB entity_list RRB','enum',3,'p_enum_no_atomic','parser.py',59),
  ('struct -> atomic LCB field_list RCB','struct',4,'p_struct_atomic','parser.py',63),
  ('struct -> LCB field_list RCB','struct',3,'p_struct_no_atomic','parser.py',67),
  ('array -> atomic LSB entity_list RSB','array',4,'p_array_atomic','parser.py',71),
  ('array -> LSB entity_list RSB','array',3,'p_array_no_atomic','parser.py',75),
  ('atomic -> ID','atomic',1,'p_atomic','parser.py',79),
]
